name: Test and Build

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]
    tags: ["*"]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: go.mod
      - name: Check Formatting
        run: |-
          files=$(go fmt ./...)
          if [ -n "$files" ]; then
            echo "The following file(s) do not conform to go fmt:"
            echo "$files"
            exit 1
          fi
      - name: Vet code
        run: go vet ./...

  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        go-version:
          - '1.23' # named in go.mod
          - 'oldstable'
          - 'stable'
    env:
      TEST_RESULTS: "/tmp/test-results"
    steps:
      - name: Checkout Code
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - name: Setup go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@1481404843c368bc19ca9406f87d6e0fc97bdcfd
      - uses: autero1/action-gotestsum@7263b9d73912eec65f46337689e59fac865c425f # v2.0.0
        with:
          gotestsum_version: 1.9.0
      - name: Run test
        run: make test
      - name: Unit test coverage
        run: make coverage
      - name: Upload coverage report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          path: /tmp/coverage.out
          name: Coverage-report-${{ matrix.go-version }}
      - name: Display coverage report
        run: go tool cover -func=/tmp/coverage.out
      - name: Build go
        run: go build ./...
        